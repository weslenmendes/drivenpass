generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int               @id @default(autoincrement())
  email            String            @unique
  password         String
  credentials      Credential[]
  notes            Note[]
  cards            Card[]
  wirellesNetworks WirellesNetwork[]
  documents        Document[]
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt

  @@map("users")
}

model Credential {
  id        Int      @id @default(autoincrement())
  userId    Int
  url       String
  title     String
  username  String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, title])
  @@map("credentials")
}

model Note {
  id        Int      @id @default(autoincrement())
  userId    Int
  title     String   @db.VarChar(50)
  content   String   @db.VarChar(1000)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, title])
  @@map("notes")
}

enum CardTypes {
  credit
  debit
  both
}

model Card {
  id             Int       @id @default(autoincrement())
  userId         Int
  title          String
  number         String    @unique @db.VarChar(16)
  holderName     String
  securityCode   String    @db.VarChar(4)
  expirationDate String    @db.VarChar(5)
  password       String
  isVirtual      Boolean   @default(false)
  type           CardTypes
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, title])
  @@map("cards")
}

enum WirellesNetworkTypes {
  bluetooth
  wifi
}

model WirellesNetwork {
  id        Int                  @id @default(autoincrement())
  userId    Int
  title     String
  name      String
  password  String
  type      WirellesNetworkTypes @default(wifi)
  createdAt DateTime             @default(now())
  updatedAt DateTime             @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("wirelles_networks")
}

enum DocumentTypes {
  rg
  cnh
}

model Document {
  id             Int           @id @default(autoincrement())
  userId         Int
  type           DocumentTypes
  fullName       String
  emissionDate   String        @db.VarChar(10)
  expirationDate String        @db.VarChar(10)
  number         String        @unique
  emissorName    String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("documents")
}
